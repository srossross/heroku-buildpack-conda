set +e
PYTHON_VERSION=$(cat runtime.txt)

# # Install Python.
if [ -d  ".heroku/miniconda" ]; then

    bpwatch start uninstall_python
      
      puts-step "Found .heroku/miniconda"
      .heroku/miniconda/bin/conda info | tee $WARNINGS_LOG | cleanup | indent
    bpwatch stop uninstall_python
    SKIP_INSTALL=1
fi

# if [ ! $STACK = $CACHED_PYTHON_STACK ]; then
#   bpwatch start uninstall_python
#     rm -fr .heroku/python .heroku/python-stack .heroku/vendor
#     unset SKIP_INSTALL
#   bpwatch stop uninstall_python
# fi


if [ ! "$SKIP_INSTALL" ]; then
  bpwatch start install_miniconda
    puts-step "Installing miniconda"

    # Prepare destination directory.
    #mkdir -p .heroku/miniconda

    curl --fail https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  > ./miniconda.sh

    if [[ $? != 0 ]] ; then
      puts-warn "Could not fetch https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
      puts-warn "Aborting."
      exit 1
    fi

    bash ./miniconda.sh -b -p .heroku/miniconda | tee $WARNINGS_LOG | cleanup | indent

    if [[ $? != 0 ]] ; then
      puts-warn "Miniconda install failed."
      puts-warn "Aborting."
      exit 1
    fi

  bpwatch stop install_python

  # Record for future reference.
  echo $PYTHON_VERSION > .heroku/python-version
  echo $STACK > .heroku/python-stack
  FRESH_PYTHON=true

  hash -r
else

  bpwatch start update_conda
    puts-step "Updating conda"
    /app/.heroku/miniconda/bin/conda install conda -y -q | tee $WARNINGS_LOG | cleanup | indent
  bpwatch stop update_conda

fi

# # If Pip isn't up to date:
# if [ "$FRESH_PYTHON" ] || [[ ! $(pip --version) == *$PIP_VERSION* ]]; then
#   WORKING_DIR=$(pwd)

#   bpwatch start prepare_environment

#   TMPTARDIR=$(mktemp -d)
#   trap "rm -rf $TMPTARDIR" RETURN

#   bpwatch start install_setuptools
#     # Prepare it for the real world
#     # puts-step "Installing Setuptools ($SETUPTOOLS_VERSION)"
#     tar zxf $ROOT_DIR/vendor/setuptools-$SETUPTOOLS_VERSION.tar.gz -C $TMPTARDIR
#     cd $TMPTARDIR/setuptools-$SETUPTOOLS_VERSION/
#     python setup.py install &> /dev/null
#     cd $WORKING_DIR
#   bpwatch stop install_setuptoools

#   bpwatch start install_pip
#     # puts-step "Installing Pip ($PIP_VERSION)"
#     tar zxf $ROOT_DIR/vendor/pip-$PIP_VERSION.tar.gz -C $TMPTARDIR
#     cd $TMPTARDIR/pip-$PIP_VERSION/
#     python setup.py install &> /dev/null
#     cd $WORKING_DIR

#   bpwatch stop install_pip
#   bpwatch stop prepare_environment
# fi

set -e
hash -r
